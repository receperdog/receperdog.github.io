import React from 'react';

interface ProjectItemProps {
  title: string;
  description: string;
  technologies: string[];
  iconBg: string;
  iconColor: string;
  demoUrl?: string;
  codeUrl?: string;
}

export const ProjectItem: React.FC<ProjectItemProps> = ({
  title,
  description,
  technologies,
  iconBg,
  iconColor,
  demoUrl,
  codeUrl,
}) => {
  // Function to determine which icon to display based on the project technologies
  const getProjectIcon = () => {
    if (technologies.includes("C#") || technologies.includes("ASP.NET Core")) {
      return (
        <svg xmlns="http://www.w3.org/2000/svg" className="h-12 w-12" fill="currentColor" viewBox="0 0 24 24">
          <path d="M9.931 12.645h4.138l-2.07-6.396h-.001l-2.067 6.396zM24 7.555c0-.262-.099-.523-.297-.784-.198-.261-.482-.412-.784-.412-.237 0-.506.044-.815.149s-.6.254-.874.473c-.274.219-.455.39-.642.63-.187.24-.322.411-.322.5 0 .26.092.405.276.434.185.029.309.029.523 0 .214-.029.422-.088.623-.178.201-.09.375-.216.523-.379.146-.163.276-.356.384-.58.108-.222.214-.465.315-.724l-.076.306c-.093.217-.15.431-.172.645-.022.214-.009.414.04.597.047.183.134.339.261.468s.312.205.566.229c.346.036.568-.006.673-.127.105-.122.157-.249.157-.382 0-.06-.013-.142-.04-.246-.027-.104-.04-.188-.04-.252 0-.244.074-.573.222-.989s.337-.776.568-1.082c.231-.306.504-.544.82-.716.315-.172.66-.257 1.031-.257.254 0 .478.034.671.102.193.068.356.176.49.328.134.151.235.331.304.54.069.208.103.449.103.722v.103c0 .12-.013.267-.04.439l-.738.734c-.254.255-.37.559-.349.913.021.354.173.647.459.877.287.231.605.348.951.348.352 0 .654-.134.906-.401.252-.267.379-.58.379-.939 0-.063-.013-.118-.039-.166l.548-.549v5.3l-1.443.514c-1.008.394-1.924.731-2.747 1.012-.823.28-1.587.5-2.292.658-.705.158-1.34.238-1.907.238-.706 0-1.333-.087-1.881-.261-.548-.174-1.012-.423-1.39-.747-.378-.324-.662-.723-.853-1.196-.19-.474-.285-1.002-.285-1.586 0-.394.074-.817.222-1.269.148-.453.388-.931.719-1.436.331-.505.768-1.015 1.312-1.53.543-.516 1.222-.967 2.034-1.354-.371.293-.756.556-1.154.792-.397.236-.718.402-.961.499-.243.097-.371.146-.383.146-.155 0-.33-.062-.523-.185-.194-.123-.34-.294-.44-.512-.1-.218-.153-.436-.159-.652-.006-.217.032-.411.116-.584.217-.524.489-.994.816-1.41l.078-.052c.562-.519 1.293-.891 2.194-1.116.901-.225 1.982-.337 3.244-.337h.739V8.303c-.009-.523-.205-.97-.591-1.339-.385-.37-.878-.554-1.475-.554-.172 0-.334.013-.487.04-.153.026-.292.063-.417.108-.125.046-.24.113-.348.203-.108.09-.209.204-.302.344-.093.139-.184.307-.273.503-.09.197-.18.428-.273.695-.093.159-.217.26-.371.301-.153.042-.292.05-.417.027-.125-.023-.24-.073-.343-.148-.103-.075-.189-.179-.258-.313-.07-.133-.127-.283-.172-.449-.046-.167-.07-.337-.07-.512 0-.199.02-.43.06-.695.04-.265.106-.544.198-.838.093-.294.216-.585.37-.873.153-.288.345-.543.578-.764.232-.221.51-.403.834-.545.323-.142.705-.213 1.142-.213.569 0 1.07.077 1.505.233.435.156.802.374 1.099.657s.525.617.677 1.005c.152.387.24.81.264 1.267l-.076-.053v.105L24 7.555zm-15 4.658c0 .547.135 1.058.406 1.533.271.475.643.833 1.117 1.076.474.242 1.023.363 1.646.363.622 0 1.206-.125 1.753-.375.547-.249.994-.559 1.341-.929.347-.37.6-.746.758-1.128.158-.381.237-.727.237-1.037 0-.156-.01-.295-.029-.417-.02-.121-.037-.232-.053-.332-.015-.1-.039-.219-.072-.357-.033-.139-.047-.27-.042-.395.005-.125.023-.267.053-.426.03-.158.058-.32.085-.484.027-.164.05-.341.067-.53l.186.159c-.057.125-.114.28-.172.464-.057.184-.1.357-.127.517-.027.159-.05.298-.067.414 0-.006-.007.113-.02.357-.013.244-.033.418-.059.523-.222.714-.502 1.272-.84 1.675-.338.404-.789.731-1.354.984-.564.252-1.247.378-2.049.378-.695 0-1.295-.115-1.8-.346-.506-.231-.895-.567-1.168-1.01-.273-.442-.409-.975-.409-1.597v-.357l.002-.11.076-.236z"/>
        </svg>
      );
    } else if (technologies.includes("Java") || technologies.includes("Spring Boot")) {
      return (
        <svg xmlns="http://www.w3.org/2000/svg" className="h-12 w-12" fill="currentColor" viewBox="0 0 24 24">
          <path d="M8.851 18.56s-.917.534.653.714c1.902.218 2.874.187 4.969-.211 0 0 .552.346 1.321.646-4.699 2.013-10.633-.118-6.943-1.149M8.276 15.933s-1.028.761.542.924c2.032.209 3.636.227 6.413-.308 0 0 .384.389.987.602-5.679 1.661-12.007.13-7.942-1.218M13.116 11.475c1.158 1.333-.304 2.533-.304 2.533s2.939-1.518 1.589-3.418c-1.261-1.772-2.228-2.652 3.007-5.688 0-.001-8.216 2.051-4.292 6.573M19.33 20.504s.679.559-.747.991c-2.712.822-11.288 1.069-13.669.033-.856-.373.75-.89 1.254-.998.527-.114.828-.93.828-.093-.953-.671-6.156 1.317-2.643 1.887 9.58 1.553 17.462-.7 14.977-1.82M9.292 13.21s-4.362 1.036-1.544 1.412c1.189.159 3.561.123 5.77-.062 1.806-.152 3.618-.477 3.618-.477s-.637.272-1.098.587c-4.429 1.165-12.986.623-10.522-.568 2.082-1.006 3.776-.892 3.776-.892M17.116 17.584c4.503-2.34 2.421-4.589.968-4.285-.355.074-.515.138-.515.138s.132-.207.385-.297c2.875-1.011 5.086 2.981-.928 4.562 0-.1.07-.62.09-.118M14.401 0s2.494 2.494-2.365 6.33c-3.896 3.077-.888 4.832-.001 6.836-2.274-2.053-3.943-3.858-2.824-5.539 1.644-2.469 6.197-3.665 5.19-7.627M9.734 23.924c4.322.277 10.959-.153 11.116-2.198 0 0-.302.775-3.572 1.391-3.688.694-8.239.613-10.937.168 0-.001.553.457 3.393.639"/>
        </svg>
      );
    } else if (technologies.includes("Blockchain")) {
      return (
        <svg xmlns="http://www.w3.org/2000/svg" className="h-12 w-12" fill="currentColor" viewBox="0 0 24 24">
          <path d="M21.19 14.001h-1.604v2.399H17.19v-2.399h-1.604v2.399h-2.395v-2.399h-1.604v2.399H9.191v-2.399H7.587v2.399H5.192v-2.399H3.587v4.798h2.395v2.399H24v-7.197h-2.81zM0 9.202h18.395V4.404H2.395V7.598H0v1.604M21.19 2h.81v2.399h-.81z"/>
        </svg>
      );
    } else if (technologies.includes("DevOps") || technologies.includes("Docker")) {
      return (
        <svg xmlns="http://www.w3.org/2000/svg" className="h-12 w-12" fill="currentColor" viewBox="0 0 24 24">
          <path d="M13.983 11.078h2.119a.186.186 0 00.186-.185V9.006a.186.186 0 00-.186-.186h-2.119a.185.185 0 00-.185.185v1.888c0 .102.083.185.185.185m-2.954-5.43h2.118a.186.186 0 00.186-.186V3.574a.186.186 0 00-.186-.185h-2.118a.185.185 0 00-.185.185v1.888c0 .102.082.185.185.185m0 2.716h2.118a.187.187 0 00.186-.186V6.29a.186.186 0 00-.186-.185h-2.118a.185.185 0 00-.185.185v1.887c0 .102.082.186.185.186m-2.93 0h2.12a.186.186 0 00.184-.186V6.29a.185.185 0 00-.185-.185H8.1a.185.185 0 00-.185.185v1.887c0 .102.083.186.185.186m-2.964 0h2.119a.186.186 0 00.185-.186V6.29a.185.185 0 00-.185-.185H5.136a.186.186 0 00-.186.185v1.887c0 .102.084.186.186.186m5.893 2.715h2.118a.186.186 0 00.186-.185V9.006a.186.186 0 00-.186-.186h-2.118a.185.185 0 00-.185.185v1.888c0 .102.082.185.185.185m-2.93 0h2.12a.185.185 0 00.184-.185V9.006a.185.185 0 00-.184-.186h-2.12a.185.185 0 00-.184.185v1.888c0 .102.083.185.185.185m-2.964 0h2.119a.185.185 0 00.185-.185V9.006a.185.185 0 00-.184-.186h-2.12a.186.186 0 00-.186.186v1.887c0 .102.084.185.186.185m-2.92 0h2.12a.185.185 0 00.184-.185V9.006a.185.185 0 00-.185-.186h-2.12a.185.185 0 00-.184.185v1.888c0 .102.082.185.185.185M23.763 9.89c-.065-.051-.672-.51-1.954-.51-.338.001-.676.03-1.01.087-.248-1.7-1.653-2.53-1.716-2.566l-.344-.199-.226.327c-.284.438-.49.922-.612 1.43-.23.97-.09 1.897.403 2.661-.6.346-1.586.434-1.78.439H4.747c-.216 0-.393.18-.396.396-.325 2.075.144 4.17 1.36 5.806 1.153 1.515 2.867 2.285 4.854 2.285 4.035 0 7.26-1.912 8.739-5.664.68.04 2.142.099 2.9-.584.042-.04.074-.137.104-.274l.098-.325H25c2.438 0 3-1.633 3-2.516 0-.705-.36-1.242-.646-1.507" />
        </svg>
      );
    } else if (technologies.includes("Data Structures") || technologies.includes("Algorithms")) {
      return (
        <svg xmlns="http://www.w3.org/2000/svg" className="h-12 w-12" fill="currentColor" viewBox="0 0 24 24">
          <path d="M10.44 13.07l-3.33-3.88-1.14 4.1H1.5l2.79-9.95h3.99l-1.68 6.05 3.28-3.84 4.4-.01-4.08 4.77 2.34 6.01H7.9l2.54-3.25zm11.7-8.99h-3.99l-4.02 14.29h3.99l4.02-14.29z"/>
        </svg>
      );
    } else if (technologies.includes("Security")) {
      return (
        <svg xmlns="http://www.w3.org/2000/svg" className="h-12 w-12" fill="currentColor" viewBox="0 0 24 24">
          <path d="M12 1L3 5v6c0 5.55 3.84 10.74 9 12 5.16-1.26 9-6.45 9-12V5l-9-4zm0 10.99h7c-.53 4.12-3.28 7.79-7 8.94V12H5V6.3l7-3.11v8.8z"/>
        </svg>
      );
    } else {
      // Default icon (code brackets)
      return (
        <svg xmlns="http://www.w3.org/2000/svg" className="h-12 w-12" fill="currentColor" viewBox="0 0 24 24">
          <path d="M8.293 6.293 2.586 12l5.707 5.707 1.414-1.414L5.414 12l4.293-4.293zm7.414 11.414L21.414 12l-5.707-5.707-1.414 1.414L18.586 12l-4.293 4.293z"/>
        </svg>
      );
    }
  };

  return (
    <div className="bg-white dark:bg-gray-800 rounded-lg shadow-md overflow-hidden transition-transform hover:-translate-y-1 border border-gray-100 dark:border-gray-700">
      <div className="h-48 bg-gradient-to-br from-gray-100 to-gray-200 dark:from-gray-800 dark:to-gray-900 flex items-center justify-center relative">
        <div className="flex items-center justify-center w-full h-full">
          <div 
            className="w-24 h-24 rounded-full flex items-center justify-center shadow-lg"
            style={{ backgroundColor: iconBg, color: iconColor }}
          >
            {getProjectIcon()}
          </div>
          
          {technologies.includes("C#") && (
            <div className="absolute top-4 right-4 bg-blue-600 text-white text-xs px-2 py-1 rounded-full">
              C# / .NET
            </div>
          )}
        </div>
      </div>
      <div className="p-6">
        <h3 className="font-bold text-xl mb-2">{title}</h3>
        <p className="text-gray-600 dark:text-gray-300 mb-4">
          {description}
        </p>
        <div className="mb-4 flex flex-wrap gap-2">
          {technologies.map((tech, index) => (
            <span 
              key={index} 
              className={`inline-block px-2 py-1 text-xs rounded 
                ${tech === "C#" || tech === "ASP.NET Core" || tech.includes(".NET") || tech === "Entity Framework"
                  ? "bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200" 
                  : "bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-200"}`}
            >
              {tech}
            </span>
          ))}
        </div>
        <div className="flex space-x-4">
          {demoUrl && (
            <a 
              href={demoUrl} 
              target="_blank" 
              rel="noopener noreferrer"
              className="text-blue-600 dark:text-blue-400 hover:underline flex items-center"
            >
              <svg className="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                <path d="M11 3a1 1 0 100 2h2.586l-6.293 6.293a1 1 0 101.414 1.414L15 6.414V9a1 1 0 102 0V4a1 1 0 00-1-1h-5z"></path>
                <path d="M5 5a2 2 0 00-2 2v8a2 2 0 002 2h8a2 2 0 002-2v-3a1 1 0 10-2 0v3H5V7h3a1 1 0 000-2H5z"></path>
              </svg>
              Demo
            </a>
          )}
          {codeUrl && (
            <a 
              href={codeUrl} 
              target="_blank" 
              rel="noopener noreferrer"
              className="text-blue-600 dark:text-blue-400 hover:underline flex items-center"
            >
              <svg className="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                <path fillRule="evenodd" d="M12.316 3.051a1 1 0 01.633 1.265l-4 12a1 1 0 11-1.898-.632l4-12a1 1 0 011.265-.633zM5.707 6.293a1 1 0 010 1.414L3.414 10l2.293 2.293a1 1 0 11-1.414 1.414l-3-3a1 1 0 010-1.414l3-3a1 1 0 011.414 0zm8.586 0a1 1 0 011.414 0l3 3a1 1 0 010 1.414l-3 3a1 1 0 11-1.414-1.414L16.586 10l-2.293-2.293a1 1 0 010-1.414z" clipRule="evenodd"></path>
              </svg>
              Code
            </a>
          )}
        </div>
      </div>
    </div>
  );
}; 